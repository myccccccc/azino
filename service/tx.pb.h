// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/tx.proto

#ifndef PROTOBUF_service_2ftx_2eproto__INCLUDED
#define PROTOBUF_service_2ftx_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace azino {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_service_2ftx_2eproto();
void protobuf_AssignDesc_service_2ftx_2eproto();
void protobuf_ShutdownFile_service_2ftx_2eproto();

class TxIdentifier;
class TxOpStatus;
class TxStatus;

enum TxOpStatus_Code {
  TxOpStatus_Code_Ok = 0,
  TxOpStatus_Code_WriteConflicts = 1,
  TxOpStatus_Code_WriteTooLate = 2,
  TxOpStatus_Code_WriteBlock = 3,
  TxOpStatus_Code_ReadBlock = 4,
  TxOpStatus_Code_NotExist = 5,
  TxOpStatus_Code_PartitionErr = 6
};
bool TxOpStatus_Code_IsValid(int value);
const TxOpStatus_Code TxOpStatus_Code_Code_MIN = TxOpStatus_Code_Ok;
const TxOpStatus_Code TxOpStatus_Code_Code_MAX = TxOpStatus_Code_PartitionErr;
const int TxOpStatus_Code_Code_ARRAYSIZE = TxOpStatus_Code_Code_MAX + 1;

const ::google::protobuf::EnumDescriptor* TxOpStatus_Code_descriptor();
inline const ::std::string& TxOpStatus_Code_Name(TxOpStatus_Code value) {
  return ::google::protobuf::internal::NameOfEnum(
    TxOpStatus_Code_descriptor(), value);
}
inline bool TxOpStatus_Code_Parse(
    const ::std::string& name, TxOpStatus_Code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TxOpStatus_Code>(
    TxOpStatus_Code_descriptor(), name, value);
}
enum TxStatus_Code {
  TxStatus_Code_UnInitialize = 0,
  TxStatus_Code_Start = 1,
  TxStatus_Code_Preput = 2,
  TxStatus_Code_Abort = 3,
  TxStatus_Code_Commit = 4,
  TxStatus_Code_Abnormal = 5
};
bool TxStatus_Code_IsValid(int value);
const TxStatus_Code TxStatus_Code_Code_MIN = TxStatus_Code_UnInitialize;
const TxStatus_Code TxStatus_Code_Code_MAX = TxStatus_Code_Abnormal;
const int TxStatus_Code_Code_ARRAYSIZE = TxStatus_Code_Code_MAX + 1;

const ::google::protobuf::EnumDescriptor* TxStatus_Code_descriptor();
inline const ::std::string& TxStatus_Code_Name(TxStatus_Code value) {
  return ::google::protobuf::internal::NameOfEnum(
    TxStatus_Code_descriptor(), value);
}
inline bool TxStatus_Code_Parse(
    const ::std::string& name, TxStatus_Code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TxStatus_Code>(
    TxStatus_Code_descriptor(), name, value);
}
// ===================================================================

class TxOpStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:azino.TxOpStatus) */ {
 public:
  TxOpStatus();
  virtual ~TxOpStatus();

  TxOpStatus(const TxOpStatus& from);

  inline TxOpStatus& operator=(const TxOpStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TxOpStatus& default_instance();

  void Swap(TxOpStatus* other);

  // implements Message ----------------------------------------------

  inline TxOpStatus* New() const { return New(NULL); }

  TxOpStatus* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TxOpStatus& from);
  void MergeFrom(const TxOpStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TxOpStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TxOpStatus_Code Code;
  static const Code Ok =
    TxOpStatus_Code_Ok;
  static const Code WriteConflicts =
    TxOpStatus_Code_WriteConflicts;
  static const Code WriteTooLate =
    TxOpStatus_Code_WriteTooLate;
  static const Code WriteBlock =
    TxOpStatus_Code_WriteBlock;
  static const Code ReadBlock =
    TxOpStatus_Code_ReadBlock;
  static const Code NotExist =
    TxOpStatus_Code_NotExist;
  static const Code PartitionErr =
    TxOpStatus_Code_PartitionErr;
  static inline bool Code_IsValid(int value) {
    return TxOpStatus_Code_IsValid(value);
  }
  static const Code Code_MIN =
    TxOpStatus_Code_Code_MIN;
  static const Code Code_MAX =
    TxOpStatus_Code_Code_MAX;
  static const int Code_ARRAYSIZE =
    TxOpStatus_Code_Code_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Code_descriptor() {
    return TxOpStatus_Code_descriptor();
  }
  static inline const ::std::string& Code_Name(Code value) {
    return TxOpStatus_Code_Name(value);
  }
  static inline bool Code_Parse(const ::std::string& name,
      Code* value) {
    return TxOpStatus_Code_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .azino.TxOpStatus.Code error_code = 1 [default = Ok];
  bool has_error_code() const;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::azino::TxOpStatus_Code error_code() const;
  void set_error_code(::azino::TxOpStatus_Code value);

  // optional string error_message = 2;
  bool has_error_message() const;
  void clear_error_message();
  static const int kErrorMessageFieldNumber = 2;
  const ::std::string& error_message() const;
  void set_error_message(const ::std::string& value);
  void set_error_message(const char* value);
  void set_error_message(const char* value, size_t size);
  ::std::string* mutable_error_message();
  ::std::string* release_error_message();
  void set_allocated_error_message(::std::string* error_message);

  // @@protoc_insertion_point(class_scope:azino.TxOpStatus)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_error_message();
  inline void clear_has_error_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr error_message_;
  int error_code_;
  friend void  protobuf_AddDesc_service_2ftx_2eproto();
  friend void protobuf_AssignDesc_service_2ftx_2eproto();
  friend void protobuf_ShutdownFile_service_2ftx_2eproto();

  void InitAsDefaultInstance();
  static TxOpStatus* default_instance_;
};
// -------------------------------------------------------------------

class TxStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:azino.TxStatus) */ {
 public:
  TxStatus();
  virtual ~TxStatus();

  TxStatus(const TxStatus& from);

  inline TxStatus& operator=(const TxStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TxStatus& default_instance();

  void Swap(TxStatus* other);

  // implements Message ----------------------------------------------

  inline TxStatus* New() const { return New(NULL); }

  TxStatus* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TxStatus& from);
  void MergeFrom(const TxStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TxStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TxStatus_Code Code;
  static const Code UnInitialize =
    TxStatus_Code_UnInitialize;
  static const Code Start =
    TxStatus_Code_Start;
  static const Code Preput =
    TxStatus_Code_Preput;
  static const Code Abort =
    TxStatus_Code_Abort;
  static const Code Commit =
    TxStatus_Code_Commit;
  static const Code Abnormal =
    TxStatus_Code_Abnormal;
  static inline bool Code_IsValid(int value) {
    return TxStatus_Code_IsValid(value);
  }
  static const Code Code_MIN =
    TxStatus_Code_Code_MIN;
  static const Code Code_MAX =
    TxStatus_Code_Code_MAX;
  static const int Code_ARRAYSIZE =
    TxStatus_Code_Code_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Code_descriptor() {
    return TxStatus_Code_descriptor();
  }
  static inline const ::std::string& Code_Name(Code value) {
    return TxStatus_Code_Name(value);
  }
  static inline bool Code_Parse(const ::std::string& name,
      Code* value) {
    return TxStatus_Code_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .azino.TxStatus.Code status_code = 1 [default = UnInitialize];
  bool has_status_code() const;
  void clear_status_code();
  static const int kStatusCodeFieldNumber = 1;
  ::azino::TxStatus_Code status_code() const;
  void set_status_code(::azino::TxStatus_Code value);

  // optional string status_message = 2;
  bool has_status_message() const;
  void clear_status_message();
  static const int kStatusMessageFieldNumber = 2;
  const ::std::string& status_message() const;
  void set_status_message(const ::std::string& value);
  void set_status_message(const char* value);
  void set_status_message(const char* value, size_t size);
  ::std::string* mutable_status_message();
  ::std::string* release_status_message();
  void set_allocated_status_message(::std::string* status_message);

  // @@protoc_insertion_point(class_scope:azino.TxStatus)
 private:
  inline void set_has_status_code();
  inline void clear_has_status_code();
  inline void set_has_status_message();
  inline void clear_has_status_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr status_message_;
  int status_code_;
  friend void  protobuf_AddDesc_service_2ftx_2eproto();
  friend void protobuf_AssignDesc_service_2ftx_2eproto();
  friend void protobuf_ShutdownFile_service_2ftx_2eproto();

  void InitAsDefaultInstance();
  static TxStatus* default_instance_;
};
// -------------------------------------------------------------------

class TxIdentifier : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:azino.TxIdentifier) */ {
 public:
  TxIdentifier();
  virtual ~TxIdentifier();

  TxIdentifier(const TxIdentifier& from);

  inline TxIdentifier& operator=(const TxIdentifier& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TxIdentifier& default_instance();

  void Swap(TxIdentifier* other);

  // implements Message ----------------------------------------------

  inline TxIdentifier* New() const { return New(NULL); }

  TxIdentifier* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TxIdentifier& from);
  void MergeFrom(const TxIdentifier& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TxIdentifier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 start_ts = 1;
  bool has_start_ts() const;
  void clear_start_ts();
  static const int kStartTsFieldNumber = 1;
  ::google::protobuf::uint64 start_ts() const;
  void set_start_ts(::google::protobuf::uint64 value);

  // optional uint64 commit_ts = 2;
  bool has_commit_ts() const;
  void clear_commit_ts();
  static const int kCommitTsFieldNumber = 2;
  ::google::protobuf::uint64 commit_ts() const;
  void set_commit_ts(::google::protobuf::uint64 value);

  // optional .azino.TxStatus status = 3;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  const ::azino::TxStatus& status() const;
  ::azino::TxStatus* mutable_status();
  ::azino::TxStatus* release_status();
  void set_allocated_status(::azino::TxStatus* status);

  // @@protoc_insertion_point(class_scope:azino.TxIdentifier)
 private:
  inline void set_has_start_ts();
  inline void clear_has_start_ts();
  inline void set_has_commit_ts();
  inline void clear_has_commit_ts();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 start_ts_;
  ::google::protobuf::uint64 commit_ts_;
  ::azino::TxStatus* status_;
  friend void  protobuf_AddDesc_service_2ftx_2eproto();
  friend void protobuf_AssignDesc_service_2ftx_2eproto();
  friend void protobuf_ShutdownFile_service_2ftx_2eproto();

  void InitAsDefaultInstance();
  static TxIdentifier* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TxOpStatus

// optional .azino.TxOpStatus.Code error_code = 1 [default = Ok];
inline bool TxOpStatus::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TxOpStatus::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TxOpStatus::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TxOpStatus::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::azino::TxOpStatus_Code TxOpStatus::error_code() const {
  // @@protoc_insertion_point(field_get:azino.TxOpStatus.error_code)
  return static_cast< ::azino::TxOpStatus_Code >(error_code_);
}
inline void TxOpStatus::set_error_code(::azino::TxOpStatus_Code value) {
  assert(::azino::TxOpStatus_Code_IsValid(value));
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:azino.TxOpStatus.error_code)
}

// optional string error_message = 2;
inline bool TxOpStatus::has_error_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TxOpStatus::set_has_error_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TxOpStatus::clear_has_error_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TxOpStatus::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error_message();
}
inline const ::std::string& TxOpStatus::error_message() const {
  // @@protoc_insertion_point(field_get:azino.TxOpStatus.error_message)
  return error_message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TxOpStatus::set_error_message(const ::std::string& value) {
  set_has_error_message();
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:azino.TxOpStatus.error_message)
}
inline void TxOpStatus::set_error_message(const char* value) {
  set_has_error_message();
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:azino.TxOpStatus.error_message)
}
inline void TxOpStatus::set_error_message(const char* value, size_t size) {
  set_has_error_message();
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:azino.TxOpStatus.error_message)
}
inline ::std::string* TxOpStatus::mutable_error_message() {
  set_has_error_message();
  // @@protoc_insertion_point(field_mutable:azino.TxOpStatus.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TxOpStatus::release_error_message() {
  // @@protoc_insertion_point(field_release:azino.TxOpStatus.error_message)
  clear_has_error_message();
  return error_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TxOpStatus::set_allocated_error_message(::std::string* error_message) {
  if (error_message != NULL) {
    set_has_error_message();
  } else {
    clear_has_error_message();
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:azino.TxOpStatus.error_message)
}

// -------------------------------------------------------------------

// TxStatus

// optional .azino.TxStatus.Code status_code = 1 [default = UnInitialize];
inline bool TxStatus::has_status_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TxStatus::set_has_status_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TxStatus::clear_has_status_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TxStatus::clear_status_code() {
  status_code_ = 0;
  clear_has_status_code();
}
inline ::azino::TxStatus_Code TxStatus::status_code() const {
  // @@protoc_insertion_point(field_get:azino.TxStatus.status_code)
  return static_cast< ::azino::TxStatus_Code >(status_code_);
}
inline void TxStatus::set_status_code(::azino::TxStatus_Code value) {
  assert(::azino::TxStatus_Code_IsValid(value));
  set_has_status_code();
  status_code_ = value;
  // @@protoc_insertion_point(field_set:azino.TxStatus.status_code)
}

// optional string status_message = 2;
inline bool TxStatus::has_status_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TxStatus::set_has_status_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TxStatus::clear_has_status_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TxStatus::clear_status_message() {
  status_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_status_message();
}
inline const ::std::string& TxStatus::status_message() const {
  // @@protoc_insertion_point(field_get:azino.TxStatus.status_message)
  return status_message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TxStatus::set_status_message(const ::std::string& value) {
  set_has_status_message();
  status_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:azino.TxStatus.status_message)
}
inline void TxStatus::set_status_message(const char* value) {
  set_has_status_message();
  status_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:azino.TxStatus.status_message)
}
inline void TxStatus::set_status_message(const char* value, size_t size) {
  set_has_status_message();
  status_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:azino.TxStatus.status_message)
}
inline ::std::string* TxStatus::mutable_status_message() {
  set_has_status_message();
  // @@protoc_insertion_point(field_mutable:azino.TxStatus.status_message)
  return status_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TxStatus::release_status_message() {
  // @@protoc_insertion_point(field_release:azino.TxStatus.status_message)
  clear_has_status_message();
  return status_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TxStatus::set_allocated_status_message(::std::string* status_message) {
  if (status_message != NULL) {
    set_has_status_message();
  } else {
    clear_has_status_message();
  }
  status_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status_message);
  // @@protoc_insertion_point(field_set_allocated:azino.TxStatus.status_message)
}

// -------------------------------------------------------------------

// TxIdentifier

// optional uint64 start_ts = 1;
inline bool TxIdentifier::has_start_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TxIdentifier::set_has_start_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TxIdentifier::clear_has_start_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TxIdentifier::clear_start_ts() {
  start_ts_ = GOOGLE_ULONGLONG(0);
  clear_has_start_ts();
}
inline ::google::protobuf::uint64 TxIdentifier::start_ts() const {
  // @@protoc_insertion_point(field_get:azino.TxIdentifier.start_ts)
  return start_ts_;
}
inline void TxIdentifier::set_start_ts(::google::protobuf::uint64 value) {
  set_has_start_ts();
  start_ts_ = value;
  // @@protoc_insertion_point(field_set:azino.TxIdentifier.start_ts)
}

// optional uint64 commit_ts = 2;
inline bool TxIdentifier::has_commit_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TxIdentifier::set_has_commit_ts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TxIdentifier::clear_has_commit_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TxIdentifier::clear_commit_ts() {
  commit_ts_ = GOOGLE_ULONGLONG(0);
  clear_has_commit_ts();
}
inline ::google::protobuf::uint64 TxIdentifier::commit_ts() const {
  // @@protoc_insertion_point(field_get:azino.TxIdentifier.commit_ts)
  return commit_ts_;
}
inline void TxIdentifier::set_commit_ts(::google::protobuf::uint64 value) {
  set_has_commit_ts();
  commit_ts_ = value;
  // @@protoc_insertion_point(field_set:azino.TxIdentifier.commit_ts)
}

// optional .azino.TxStatus status = 3;
inline bool TxIdentifier::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TxIdentifier::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TxIdentifier::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TxIdentifier::clear_status() {
  if (status_ != NULL) status_->::azino::TxStatus::Clear();
  clear_has_status();
}
inline const ::azino::TxStatus& TxIdentifier::status() const {
  // @@protoc_insertion_point(field_get:azino.TxIdentifier.status)
  return status_ != NULL ? *status_ : *default_instance_->status_;
}
inline ::azino::TxStatus* TxIdentifier::mutable_status() {
  set_has_status();
  if (status_ == NULL) {
    status_ = new ::azino::TxStatus;
  }
  // @@protoc_insertion_point(field_mutable:azino.TxIdentifier.status)
  return status_;
}
inline ::azino::TxStatus* TxIdentifier::release_status() {
  // @@protoc_insertion_point(field_release:azino.TxIdentifier.status)
  clear_has_status();
  ::azino::TxStatus* temp = status_;
  status_ = NULL;
  return temp;
}
inline void TxIdentifier::set_allocated_status(::azino::TxStatus* status) {
  delete status_;
  status_ = status;
  if (status) {
    set_has_status();
  } else {
    clear_has_status();
  }
  // @@protoc_insertion_point(field_set_allocated:azino.TxIdentifier.status)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace azino

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::azino::TxOpStatus_Code> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::azino::TxOpStatus_Code>() {
  return ::azino::TxOpStatus_Code_descriptor();
}
template <> struct is_proto_enum< ::azino::TxStatus_Code> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::azino::TxStatus_Code>() {
  return ::azino::TxStatus_Code_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_service_2ftx_2eproto__INCLUDED
