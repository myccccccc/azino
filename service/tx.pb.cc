// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/tx.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "service/tx.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace azino {

namespace {

const ::google::protobuf::Descriptor* TxOpStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TxOpStatus_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TxOpStatus_Code_descriptor_ = NULL;
const ::google::protobuf::Descriptor* TxStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TxStatus_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TxStatus_Code_descriptor_ = NULL;
const ::google::protobuf::Descriptor* TxIdentifier_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TxIdentifier_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_service_2ftx_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_service_2ftx_2eproto() {
  protobuf_AddDesc_service_2ftx_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "service/tx.proto");
  GOOGLE_CHECK(file != NULL);
  TxOpStatus_descriptor_ = file->message_type(0);
  static const int TxOpStatus_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxOpStatus, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxOpStatus, error_message_),
  };
  TxOpStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TxOpStatus_descriptor_,
      TxOpStatus::default_instance_,
      TxOpStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxOpStatus, _has_bits_[0]),
      -1,
      -1,
      sizeof(TxOpStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxOpStatus, _internal_metadata_),
      -1);
  TxOpStatus_Code_descriptor_ = TxOpStatus_descriptor_->enum_type(0);
  TxStatus_descriptor_ = file->message_type(1);
  static const int TxStatus_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxStatus, status_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxStatus, status_message_),
  };
  TxStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TxStatus_descriptor_,
      TxStatus::default_instance_,
      TxStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxStatus, _has_bits_[0]),
      -1,
      -1,
      sizeof(TxStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxStatus, _internal_metadata_),
      -1);
  TxStatus_Code_descriptor_ = TxStatus_descriptor_->enum_type(0);
  TxIdentifier_descriptor_ = file->message_type(2);
  static const int TxIdentifier_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxIdentifier, start_ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxIdentifier, commit_ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxIdentifier, status_),
  };
  TxIdentifier_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TxIdentifier_descriptor_,
      TxIdentifier::default_instance_,
      TxIdentifier_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxIdentifier, _has_bits_[0]),
      -1,
      -1,
      sizeof(TxIdentifier),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxIdentifier, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_service_2ftx_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TxOpStatus_descriptor_, &TxOpStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TxStatus_descriptor_, &TxStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TxIdentifier_descriptor_, &TxIdentifier::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_service_2ftx_2eproto() {
  delete TxOpStatus::default_instance_;
  delete TxOpStatus_reflection_;
  delete TxStatus::default_instance_;
  delete TxStatus_reflection_;
  delete TxIdentifier::default_instance_;
  delete TxIdentifier_reflection_;
}

void protobuf_AddDesc_service_2ftx_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_service_2ftx_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020service/tx.proto\022\005azino\"\252\001\n\nTxOpStatus"
    "\022.\n\nerror_code\030\001 \001(\0162\026.azino.TxOpStatus."
    "Code:\002Ok\022\025\n\rerror_message\030\002 \001(\t\"U\n\004Code\022"
    "\006\n\002Ok\020\000\022\r\n\tConflicts\020\001\022\013\n\007TooLate\020\002\022\t\n\005B"
    "lock\020\003\022\014\n\010NotExist\020\004\022\020\n\014PartitionErr\020\005\"\261"
    "\001\n\010TxStatus\0227\n\013status_code\030\001 \001(\0162\024.azino"
    ".TxStatus.Code:\014UnInitialize\022\026\n\016status_m"
    "essage\030\002 \001(\t\"T\n\004Code\022\020\n\014UnInitialize\020\000\022\t"
    "\n\005Start\020\001\022\n\n\006Preput\020\002\022\t\n\005Abort\020\003\022\n\n\006Comm"
    "it\020\004\022\014\n\010Abnormal\020\005\"T\n\014TxIdentifier\022\020\n\010st"
    "art_ts\030\001 \001(\004\022\021\n\tcommit_ts\030\002 \001(\004\022\037\n\006statu"
    "s\030\003 \001(\0132\017.azino.TxStatus", 464);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "service/tx.proto", &protobuf_RegisterTypes);
  TxOpStatus::default_instance_ = new TxOpStatus();
  TxStatus::default_instance_ = new TxStatus();
  TxIdentifier::default_instance_ = new TxIdentifier();
  TxOpStatus::default_instance_->InitAsDefaultInstance();
  TxStatus::default_instance_->InitAsDefaultInstance();
  TxIdentifier::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_service_2ftx_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_service_2ftx_2eproto {
  StaticDescriptorInitializer_service_2ftx_2eproto() {
    protobuf_AddDesc_service_2ftx_2eproto();
  }
} static_descriptor_initializer_service_2ftx_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* TxOpStatus_Code_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TxOpStatus_Code_descriptor_;
}
bool TxOpStatus_Code_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TxOpStatus_Code TxOpStatus::Ok;
const TxOpStatus_Code TxOpStatus::Conflicts;
const TxOpStatus_Code TxOpStatus::TooLate;
const TxOpStatus_Code TxOpStatus::Block;
const TxOpStatus_Code TxOpStatus::NotExist;
const TxOpStatus_Code TxOpStatus::PartitionErr;
const TxOpStatus_Code TxOpStatus::Code_MIN;
const TxOpStatus_Code TxOpStatus::Code_MAX;
const int TxOpStatus::Code_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxOpStatus::kErrorCodeFieldNumber;
const int TxOpStatus::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxOpStatus::TxOpStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:azino.TxOpStatus)
}

void TxOpStatus::InitAsDefaultInstance() {
}

TxOpStatus::TxOpStatus(const TxOpStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:azino.TxOpStatus)
}

void TxOpStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  error_code_ = 0;
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TxOpStatus::~TxOpStatus() {
  // @@protoc_insertion_point(destructor:azino.TxOpStatus)
  SharedDtor();
}

void TxOpStatus::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TxOpStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TxOpStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TxOpStatus_descriptor_;
}

const TxOpStatus& TxOpStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_service_2ftx_2eproto();
  return *default_instance_;
}

TxOpStatus* TxOpStatus::default_instance_ = NULL;

TxOpStatus* TxOpStatus::New(::google::protobuf::Arena* arena) const {
  TxOpStatus* n = new TxOpStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TxOpStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:azino.TxOpStatus)
  if (_has_bits_[0 / 32] & 3u) {
    error_code_ = 0;
    if (has_error_message()) {
      error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TxOpStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:azino.TxOpStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .azino.TxOpStatus.Code error_code = 1 [default = Ok];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::azino::TxOpStatus_Code_IsValid(value)) {
            set_error_code(static_cast< ::azino::TxOpStatus_Code >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error_message;
        break;
      }

      // optional string error_message = 2;
      case 2: {
        if (tag == 18) {
         parse_error_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error_message().data(), this->error_message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "azino.TxOpStatus.error_message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:azino.TxOpStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:azino.TxOpStatus)
  return false;
#undef DO_
}

void TxOpStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:azino.TxOpStatus)
  // optional .azino.TxOpStatus.Code error_code = 1 [default = Ok];
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }

  // optional string error_message = 2;
  if (has_error_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_message().data(), this->error_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "azino.TxOpStatus.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:azino.TxOpStatus)
}

::google::protobuf::uint8* TxOpStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:azino.TxOpStatus)
  // optional .azino.TxOpStatus.Code error_code = 1 [default = Ok];
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }

  // optional string error_message = 2;
  if (has_error_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_message().data(), this->error_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "azino.TxOpStatus.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:azino.TxOpStatus)
  return target;
}

int TxOpStatus::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:azino.TxOpStatus)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .azino.TxOpStatus.Code error_code = 1 [default = Ok];
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }

    // optional string error_message = 2;
    if (has_error_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error_message());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TxOpStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:azino.TxOpStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TxOpStatus* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TxOpStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:azino.TxOpStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:azino.TxOpStatus)
    MergeFrom(*source);
  }
}

void TxOpStatus::MergeFrom(const TxOpStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:azino.TxOpStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
    if (from.has_error_message()) {
      set_has_error_message();
      error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TxOpStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:azino.TxOpStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxOpStatus::CopyFrom(const TxOpStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:azino.TxOpStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxOpStatus::IsInitialized() const {

  return true;
}

void TxOpStatus::Swap(TxOpStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxOpStatus::InternalSwap(TxOpStatus* other) {
  std::swap(error_code_, other->error_code_);
  error_message_.Swap(&other->error_message_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TxOpStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TxOpStatus_descriptor_;
  metadata.reflection = TxOpStatus_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TxOpStatus

// optional .azino.TxOpStatus.Code error_code = 1 [default = Ok];
bool TxOpStatus::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TxOpStatus::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
void TxOpStatus::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void TxOpStatus::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
 ::azino::TxOpStatus_Code TxOpStatus::error_code() const {
  // @@protoc_insertion_point(field_get:azino.TxOpStatus.error_code)
  return static_cast< ::azino::TxOpStatus_Code >(error_code_);
}
 void TxOpStatus::set_error_code(::azino::TxOpStatus_Code value) {
  assert(::azino::TxOpStatus_Code_IsValid(value));
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:azino.TxOpStatus.error_code)
}

// optional string error_message = 2;
bool TxOpStatus::has_error_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TxOpStatus::set_has_error_message() {
  _has_bits_[0] |= 0x00000002u;
}
void TxOpStatus::clear_has_error_message() {
  _has_bits_[0] &= ~0x00000002u;
}
void TxOpStatus::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error_message();
}
 const ::std::string& TxOpStatus::error_message() const {
  // @@protoc_insertion_point(field_get:azino.TxOpStatus.error_message)
  return error_message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TxOpStatus::set_error_message(const ::std::string& value) {
  set_has_error_message();
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:azino.TxOpStatus.error_message)
}
 void TxOpStatus::set_error_message(const char* value) {
  set_has_error_message();
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:azino.TxOpStatus.error_message)
}
 void TxOpStatus::set_error_message(const char* value, size_t size) {
  set_has_error_message();
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:azino.TxOpStatus.error_message)
}
 ::std::string* TxOpStatus::mutable_error_message() {
  set_has_error_message();
  // @@protoc_insertion_point(field_mutable:azino.TxOpStatus.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TxOpStatus::release_error_message() {
  // @@protoc_insertion_point(field_release:azino.TxOpStatus.error_message)
  clear_has_error_message();
  return error_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TxOpStatus::set_allocated_error_message(::std::string* error_message) {
  if (error_message != NULL) {
    set_has_error_message();
  } else {
    clear_has_error_message();
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:azino.TxOpStatus.error_message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* TxStatus_Code_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TxStatus_Code_descriptor_;
}
bool TxStatus_Code_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TxStatus_Code TxStatus::UnInitialize;
const TxStatus_Code TxStatus::Start;
const TxStatus_Code TxStatus::Preput;
const TxStatus_Code TxStatus::Abort;
const TxStatus_Code TxStatus::Commit;
const TxStatus_Code TxStatus::Abnormal;
const TxStatus_Code TxStatus::Code_MIN;
const TxStatus_Code TxStatus::Code_MAX;
const int TxStatus::Code_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxStatus::kStatusCodeFieldNumber;
const int TxStatus::kStatusMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxStatus::TxStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:azino.TxStatus)
}

void TxStatus::InitAsDefaultInstance() {
}

TxStatus::TxStatus(const TxStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:azino.TxStatus)
}

void TxStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_code_ = 0;
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TxStatus::~TxStatus() {
  // @@protoc_insertion_point(destructor:azino.TxStatus)
  SharedDtor();
}

void TxStatus::SharedDtor() {
  status_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TxStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TxStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TxStatus_descriptor_;
}

const TxStatus& TxStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_service_2ftx_2eproto();
  return *default_instance_;
}

TxStatus* TxStatus::default_instance_ = NULL;

TxStatus* TxStatus::New(::google::protobuf::Arena* arena) const {
  TxStatus* n = new TxStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TxStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:azino.TxStatus)
  if (_has_bits_[0 / 32] & 3u) {
    status_code_ = 0;
    if (has_status_message()) {
      status_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TxStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:azino.TxStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .azino.TxStatus.Code status_code = 1 [default = UnInitialize];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::azino::TxStatus_Code_IsValid(value)) {
            set_status_code(static_cast< ::azino::TxStatus_Code >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_status_message;
        break;
      }

      // optional string status_message = 2;
      case 2: {
        if (tag == 18) {
         parse_status_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->status_message().data(), this->status_message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "azino.TxStatus.status_message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:azino.TxStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:azino.TxStatus)
  return false;
#undef DO_
}

void TxStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:azino.TxStatus)
  // optional .azino.TxStatus.Code status_code = 1 [default = UnInitialize];
  if (has_status_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status_code(), output);
  }

  // optional string status_message = 2;
  if (has_status_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status_message().data(), this->status_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "azino.TxStatus.status_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->status_message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:azino.TxStatus)
}

::google::protobuf::uint8* TxStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:azino.TxStatus)
  // optional .azino.TxStatus.Code status_code = 1 [default = UnInitialize];
  if (has_status_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status_code(), target);
  }

  // optional string status_message = 2;
  if (has_status_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status_message().data(), this->status_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "azino.TxStatus.status_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->status_message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:azino.TxStatus)
  return target;
}

int TxStatus::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:azino.TxStatus)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .azino.TxStatus.Code status_code = 1 [default = UnInitialize];
    if (has_status_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status_code());
    }

    // optional string status_message = 2;
    if (has_status_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->status_message());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TxStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:azino.TxStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TxStatus* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TxStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:azino.TxStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:azino.TxStatus)
    MergeFrom(*source);
  }
}

void TxStatus::MergeFrom(const TxStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:azino.TxStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status_code()) {
      set_status_code(from.status_code());
    }
    if (from.has_status_message()) {
      set_has_status_message();
      status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TxStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:azino.TxStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxStatus::CopyFrom(const TxStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:azino.TxStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxStatus::IsInitialized() const {

  return true;
}

void TxStatus::Swap(TxStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxStatus::InternalSwap(TxStatus* other) {
  std::swap(status_code_, other->status_code_);
  status_message_.Swap(&other->status_message_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TxStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TxStatus_descriptor_;
  metadata.reflection = TxStatus_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TxStatus

// optional .azino.TxStatus.Code status_code = 1 [default = UnInitialize];
bool TxStatus::has_status_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TxStatus::set_has_status_code() {
  _has_bits_[0] |= 0x00000001u;
}
void TxStatus::clear_has_status_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void TxStatus::clear_status_code() {
  status_code_ = 0;
  clear_has_status_code();
}
 ::azino::TxStatus_Code TxStatus::status_code() const {
  // @@protoc_insertion_point(field_get:azino.TxStatus.status_code)
  return static_cast< ::azino::TxStatus_Code >(status_code_);
}
 void TxStatus::set_status_code(::azino::TxStatus_Code value) {
  assert(::azino::TxStatus_Code_IsValid(value));
  set_has_status_code();
  status_code_ = value;
  // @@protoc_insertion_point(field_set:azino.TxStatus.status_code)
}

// optional string status_message = 2;
bool TxStatus::has_status_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TxStatus::set_has_status_message() {
  _has_bits_[0] |= 0x00000002u;
}
void TxStatus::clear_has_status_message() {
  _has_bits_[0] &= ~0x00000002u;
}
void TxStatus::clear_status_message() {
  status_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_status_message();
}
 const ::std::string& TxStatus::status_message() const {
  // @@protoc_insertion_point(field_get:azino.TxStatus.status_message)
  return status_message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TxStatus::set_status_message(const ::std::string& value) {
  set_has_status_message();
  status_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:azino.TxStatus.status_message)
}
 void TxStatus::set_status_message(const char* value) {
  set_has_status_message();
  status_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:azino.TxStatus.status_message)
}
 void TxStatus::set_status_message(const char* value, size_t size) {
  set_has_status_message();
  status_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:azino.TxStatus.status_message)
}
 ::std::string* TxStatus::mutable_status_message() {
  set_has_status_message();
  // @@protoc_insertion_point(field_mutable:azino.TxStatus.status_message)
  return status_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TxStatus::release_status_message() {
  // @@protoc_insertion_point(field_release:azino.TxStatus.status_message)
  clear_has_status_message();
  return status_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TxStatus::set_allocated_status_message(::std::string* status_message) {
  if (status_message != NULL) {
    set_has_status_message();
  } else {
    clear_has_status_message();
  }
  status_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status_message);
  // @@protoc_insertion_point(field_set_allocated:azino.TxStatus.status_message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxIdentifier::kStartTsFieldNumber;
const int TxIdentifier::kCommitTsFieldNumber;
const int TxIdentifier::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxIdentifier::TxIdentifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:azino.TxIdentifier)
}

void TxIdentifier::InitAsDefaultInstance() {
  status_ = const_cast< ::azino::TxStatus*>(&::azino::TxStatus::default_instance());
}

TxIdentifier::TxIdentifier(const TxIdentifier& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:azino.TxIdentifier)
}

void TxIdentifier::SharedCtor() {
  _cached_size_ = 0;
  start_ts_ = GOOGLE_ULONGLONG(0);
  commit_ts_ = GOOGLE_ULONGLONG(0);
  status_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TxIdentifier::~TxIdentifier() {
  // @@protoc_insertion_point(destructor:azino.TxIdentifier)
  SharedDtor();
}

void TxIdentifier::SharedDtor() {
  if (this != default_instance_) {
    delete status_;
  }
}

void TxIdentifier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TxIdentifier::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TxIdentifier_descriptor_;
}

const TxIdentifier& TxIdentifier::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_service_2ftx_2eproto();
  return *default_instance_;
}

TxIdentifier* TxIdentifier::default_instance_ = NULL;

TxIdentifier* TxIdentifier::New(::google::protobuf::Arena* arena) const {
  TxIdentifier* n = new TxIdentifier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TxIdentifier::Clear() {
// @@protoc_insertion_point(message_clear_start:azino.TxIdentifier)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TxIdentifier, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TxIdentifier*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(start_ts_, commit_ts_);
    if (has_status()) {
      if (status_ != NULL) status_->::azino::TxStatus::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TxIdentifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:azino.TxIdentifier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 start_ts = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_ts_)));
          set_has_start_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_commit_ts;
        break;
      }

      // optional uint64 commit_ts = 2;
      case 2: {
        if (tag == 16) {
         parse_commit_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &commit_ts_)));
          set_has_commit_ts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_status;
        break;
      }

      // optional .azino.TxStatus status = 3;
      case 3: {
        if (tag == 26) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:azino.TxIdentifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:azino.TxIdentifier)
  return false;
#undef DO_
}

void TxIdentifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:azino.TxIdentifier)
  // optional uint64 start_ts = 1;
  if (has_start_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->start_ts(), output);
  }

  // optional uint64 commit_ts = 2;
  if (has_commit_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->commit_ts(), output);
  }

  // optional .azino.TxStatus status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->status_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:azino.TxIdentifier)
}

::google::protobuf::uint8* TxIdentifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:azino.TxIdentifier)
  // optional uint64 start_ts = 1;
  if (has_start_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->start_ts(), target);
  }

  // optional uint64 commit_ts = 2;
  if (has_commit_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->commit_ts(), target);
  }

  // optional .azino.TxStatus status = 3;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->status_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:azino.TxIdentifier)
  return target;
}

int TxIdentifier::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:azino.TxIdentifier)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 start_ts = 1;
    if (has_start_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->start_ts());
    }

    // optional uint64 commit_ts = 2;
    if (has_commit_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->commit_ts());
    }

    // optional .azino.TxStatus status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->status_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TxIdentifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:azino.TxIdentifier)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TxIdentifier* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TxIdentifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:azino.TxIdentifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:azino.TxIdentifier)
    MergeFrom(*source);
  }
}

void TxIdentifier::MergeFrom(const TxIdentifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:azino.TxIdentifier)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_ts()) {
      set_start_ts(from.start_ts());
    }
    if (from.has_commit_ts()) {
      set_commit_ts(from.commit_ts());
    }
    if (from.has_status()) {
      mutable_status()->::azino::TxStatus::MergeFrom(from.status());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TxIdentifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:azino.TxIdentifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxIdentifier::CopyFrom(const TxIdentifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:azino.TxIdentifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxIdentifier::IsInitialized() const {

  return true;
}

void TxIdentifier::Swap(TxIdentifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxIdentifier::InternalSwap(TxIdentifier* other) {
  std::swap(start_ts_, other->start_ts_);
  std::swap(commit_ts_, other->commit_ts_);
  std::swap(status_, other->status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TxIdentifier::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TxIdentifier_descriptor_;
  metadata.reflection = TxIdentifier_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TxIdentifier

// optional uint64 start_ts = 1;
bool TxIdentifier::has_start_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TxIdentifier::set_has_start_ts() {
  _has_bits_[0] |= 0x00000001u;
}
void TxIdentifier::clear_has_start_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
void TxIdentifier::clear_start_ts() {
  start_ts_ = GOOGLE_ULONGLONG(0);
  clear_has_start_ts();
}
 ::google::protobuf::uint64 TxIdentifier::start_ts() const {
  // @@protoc_insertion_point(field_get:azino.TxIdentifier.start_ts)
  return start_ts_;
}
 void TxIdentifier::set_start_ts(::google::protobuf::uint64 value) {
  set_has_start_ts();
  start_ts_ = value;
  // @@protoc_insertion_point(field_set:azino.TxIdentifier.start_ts)
}

// optional uint64 commit_ts = 2;
bool TxIdentifier::has_commit_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TxIdentifier::set_has_commit_ts() {
  _has_bits_[0] |= 0x00000002u;
}
void TxIdentifier::clear_has_commit_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
void TxIdentifier::clear_commit_ts() {
  commit_ts_ = GOOGLE_ULONGLONG(0);
  clear_has_commit_ts();
}
 ::google::protobuf::uint64 TxIdentifier::commit_ts() const {
  // @@protoc_insertion_point(field_get:azino.TxIdentifier.commit_ts)
  return commit_ts_;
}
 void TxIdentifier::set_commit_ts(::google::protobuf::uint64 value) {
  set_has_commit_ts();
  commit_ts_ = value;
  // @@protoc_insertion_point(field_set:azino.TxIdentifier.commit_ts)
}

// optional .azino.TxStatus status = 3;
bool TxIdentifier::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TxIdentifier::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
void TxIdentifier::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
void TxIdentifier::clear_status() {
  if (status_ != NULL) status_->::azino::TxStatus::Clear();
  clear_has_status();
}
const ::azino::TxStatus& TxIdentifier::status() const {
  // @@protoc_insertion_point(field_get:azino.TxIdentifier.status)
  return status_ != NULL ? *status_ : *default_instance_->status_;
}
::azino::TxStatus* TxIdentifier::mutable_status() {
  set_has_status();
  if (status_ == NULL) {
    status_ = new ::azino::TxStatus;
  }
  // @@protoc_insertion_point(field_mutable:azino.TxIdentifier.status)
  return status_;
}
::azino::TxStatus* TxIdentifier::release_status() {
  // @@protoc_insertion_point(field_release:azino.TxIdentifier.status)
  clear_has_status();
  ::azino::TxStatus* temp = status_;
  status_ = NULL;
  return temp;
}
void TxIdentifier::set_allocated_status(::azino::TxStatus* status) {
  delete status_;
  status_ = status;
  if (status) {
    set_has_status();
  } else {
    clear_has_status();
  }
  // @@protoc_insertion_point(field_set_allocated:azino.TxIdentifier.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace azino

// @@protoc_insertion_point(global_scope)
