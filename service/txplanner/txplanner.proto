syntax="proto2";
package azino.txplanner;

option cc_generic_services = true;

import "service/tx.proto";

message BeginTxRequest {

}

message BeginTxResponse {
  optional azino.TxIdentifier txid = 1;
  repeated string txindex_addrs = 2; // txindex addresses in form of "0.0.0.0:8000"
  optional string storage_addr = 3; // storage addresses in form of "0.0.0.0:8000"
}

message CommitTxRequest {
  optional azino.TxIdentifier txid = 1;
}

message CommitTxResponse {
  optional azino.TxIdentifier txid = 1;
}

service TxService {
  rpc BeginTx(BeginTxRequest) returns (BeginTxResponse);
  rpc CommitTx(CommitTxRequest) returns (CommitTxResponse);
}

message DepRequest {
  optional string key = 1;
  optional uint64 tx1_ts = 2; // can be start_ts or commit_ts
  optional uint64 tx2_ts = 3; // can be start_ts or commit_ts
}

message DepResponse {

}

service DependenceService {
  rpc RWDep(DepRequest) returns (DepResponse);
  rpc WWDep(DepRequest) returns (DepResponse);
  rpc WRDep(DepRequest) returns (DepResponse);
}